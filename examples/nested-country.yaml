# Country DTO demonstrating deeper nesting levels
header:
  dto: CountryDTO
  table: countries
  model: App\Models\Country
  namespace: App\DTO\Common
  traits:
    - HasTimestamps
    - HasUuid
  extends: BaseDTO

fields:
  name:
    type: string
    required: true
    validation: [required, string, min:2, max:100]
  
  code:
    type: string
    required: true
    rules: [size:2, unique:countries]
  
  iso3:
    type: string
    required: true
    rules: [size:3, unique:countries]
  
  currency_code:
    type: string
    required: true
    rules: [size:3]
  
  phone_code:
    type: string
    required: false
    rules: [max:5]
  
  # Region as nested DTO (this would be level 4 in OrderDTO → AddressDTO → CountryDTO → RegionDTO)
  # Due to depth limiting, this would fall back to array type when generated from OrderDTO
  region:
    type: dto
    dto: RegionDTO
    required: false
  
  # Localization data
  locale:
    type: string
    required: false
    rules: [size:5]
  
  timezone:
    type: string
    required: false
    rules: [max:50]
  
  # Geographic data
  continent:
    type: string
    required: false
    rules: [max:50]
  
  # Status
  is_active:
    type: boolean
    default: true
  
  # Additional metadata
  flag_emoji:
    type: string
    required: false
  
  metadata:
    type: json
    required: false

relations:
  states:
    type: hasMany
    target: App\Models\State
  
  cities:
    type: hasMany
    target: App\Models\City

# Behavioral traits automatically add fields:
# - HasTimestamps: created_at, updated_at
# - HasUuid: id (UUID type)