<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="/home/jean-marc-strauven/Dev/laravel-arc/phpunit.xml" tests="40" assertions="78" errors="0" failures="0" skipped="0" time="0.943689">
    <testsuite name="Feature" tests="6" assertions="18" errors="0" failures="0" skipped="0" time="0.213975">
      <testsuite name="Tests\Feature\DtoDefinitionCommandsTest" file="tests/Feature/DtoDefinitionCommandsTest.php" tests="2" assertions="11" errors="0" failures="0" skipped="0" time="0.136202">
        <testcase name="it creates a YAML DTO definition file with dto:definition-init" file="tests/Feature/DtoDefinitionCommandsTest.php::it creates a YAML DTO definition file with dto:definition-init" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="8" time="0.115193"/>
        <testcase name="it lists the generated YAML file with dto:definition-list" file="tests/Feature/DtoDefinitionCommandsTest.php::it lists the generated YAML file with dto:definition-list" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="3" time="0.021009"/>
      </testsuite>
      <testsuite name="Tests\Feature\ConfigTest" file="tests/Feature/ConfigTest.php" tests="4" assertions="7" errors="0" failures="0" skipped="0" time="0.077773">
        <testcase name="it allows manual override of namespace via config" file="tests/Feature/ConfigTest.php::it allows manual override of namespace via config" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.028623"/>
        <testcase name="it can resolve paths via DtoPaths helper" file="tests/Feature/ConfigTest.php::it can resolve paths via DtoPaths helper" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="2" time="0.016597"/>
        <testcase name="it automatically infers namespace from output path" file="tests/Feature/ConfigTest.php::it automatically infers namespace from output path" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.016404"/>
        <testcase name="it loads the dto configuration correctly" file="tests/Feature/ConfigTest.php::it loads the dto configuration correctly" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="3" time="0.016149"/>
      </testsuite>
    </testsuite>
    <testsuite name="Unit" tests="34" assertions="60" errors="0" failures="0" skipped="0" time="0.729714">
      <testsuite name="Tests\Unit\Field\DateFieldGeneratorTest" file="tests/Unit/Field/DateFieldGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.097600">
        <testcase name="it generates nullable date field with null default" file="tests/Unit/Field/DateFieldGeneratorTest.php::it generates nullable date field with null default" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.045007"/>
        <testcase name="it generates non-nullable date field without default" file="tests/Unit/Field/DateFieldGeneratorTest.php::it generates non-nullable date field without default" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.016328"/>
        <testcase name="it handles explicit null default for date" file="tests/Unit/Field/DateFieldGeneratorTest.php::it handles explicit null default for date" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.019650"/>
        <testcase name="it ignores string default value for date" file="tests/Unit/Field/DateFieldGeneratorTest.php::it ignores string default value for date" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.016615"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\StringFieldGeneratorTest" file="tests/Unit/Field/StringFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.026914">
        <testcase name="it generates string fields correctly" file="tests/Unit/Field/StringFieldGeneratorTest.php::it generates string fields correctly" class="Tests\Unit\Field\StringFieldGeneratorTest" classname="Tests.Unit.Field.StringFieldGeneratorTest" assertions="4" time="0.026914"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\BooleanFieldGeneratorTest" file="tests/Unit/Field/BooleanFieldGeneratorTest.php" tests="1" assertions="5" errors="0" failures="0" skipped="0" time="0.024840">
        <testcase name="it generates boolean fields correctly" file="tests/Unit/Field/BooleanFieldGeneratorTest.php::it generates boolean fields correctly" class="Tests\Unit\Field\BooleanFieldGeneratorTest" classname="Tests.Unit.Field.BooleanFieldGeneratorTest" assertions="5" time="0.024840"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FloatFieldGeneratorTest" file="tests/Unit/Field/FloatFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.024193">
        <testcase name="it generates float fields correctly" file="tests/Unit/Field/FloatFieldGeneratorTest.php::it generates float fields correctly" class="Tests\Unit\Field\FloatFieldGeneratorTest" classname="Tests.Unit.Field.FloatFieldGeneratorTest" assertions="6" time="0.024193"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\ModelHeaderGeneratorTest" file="tests/Unit/Header/ModelHeaderGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.077587">
        <testcase name="it trims backslashes from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it trims backslashes from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.018353"/>
        <testcase name="it returns null if model header is not a string" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is not a string" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.022611"/>
        <testcase name="it generates use statement from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it generates use statement from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016743"/>
        <testcase name="it returns null if model header is missing" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is missing" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.019880"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\TableHeaderGeneratorTest" file="tests/Unit/Header/TableHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.045258">
        <testcase name="it generates table annotation from table header" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it generates table annotation from table header" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.028513"/>
        <testcase name="it returns null if table header is missing" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it returns null if table header is missing" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.016745"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FieldGeneratorRegistryTest" file="tests/Unit/Field/FieldGeneratorRegistryTest.php" tests="7" assertions="8" errors="0" failures="0" skipped="0" time="0.128808">
        <testcase name="it calls the correct generator for a string field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a string field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.025886"/>
        <testcase name="it Calls the correct generator for a double field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a double field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.017751"/>
        <testcase name="it throws if no generator supports the field type" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it throws if no generator supports the field type" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="2" time="0.016436"/>
        <testcase name="it calls the correct generator for an integer field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for an integer field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.017715"/>
        <testcase name="it Calls the correct generator for a decimal field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a decimal field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.017383"/>
        <testcase name="it Calls the correct generator for a boolean field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a boolean field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016778"/>
        <testcase name="it calls the correct generator for a float field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a float field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016858"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DecimalFieldGeneratorTest" file="tests/Unit/Field/DecimalFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.029959">
        <testcase name="it generates decimal fields correctly" file="tests/Unit/Field/DecimalFieldGeneratorTest.php::it generates decimal fields correctly" class="Tests\Unit\Field\DecimalFieldGeneratorTest" classname="Tests.Unit.Field.DecimalFieldGeneratorTest" assertions="4" time="0.029959"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\IntegerFieldGeneratorTest" file="tests/Unit/Field/IntegerFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.024430">
        <testcase name="it generates integer fields correctly" file="tests/Unit/Field/IntegerFieldGeneratorTest.php::it generates integer fields correctly" class="Tests\Unit\Field\IntegerFieldGeneratorTest" classname="Tests.Unit.Field.IntegerFieldGeneratorTest" assertions="6" time="0.024430"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DateTimeFieldGeneratorTest" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.086788">
        <testcase name="it handles explicit null default for datetime" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it handles explicit null default for datetime" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.021638"/>
        <testcase name="it generates non-nullable datetime field without default" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it generates non-nullable datetime field without default" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.026838"/>
        <testcase name="it generates nullable datetime field with null default" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it generates nullable datetime field with null default" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.020371"/>
        <testcase name="it ignores string default value for datetime" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it ignores string default value for datetime" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.017942"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\HeaderGeneratorRegistryTest" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.022139">
        <testcase name="it calls only supported generators for the headers" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php::it calls only supported generators for the headers" class="Tests\Unit\Header\HeaderGeneratorRegistryTest" classname="Tests.Unit.Header.HeaderGeneratorRegistryTest" assertions="6" time="0.022139"/>
      </testsuite>
      <testsuite name="Tests\Unit\Support\FieldBuilderTest" file="tests/Unit/Support/FieldBuilderTest.php" tests="5" assertions="5" errors="0" failures="0" skipped="0" time="0.095163">
        <testcase name="it generates string field with default" file="tests/Unit/Support/FieldBuilderTest.php::it generates string field with default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.020723"/>
        <testcase name="it generates boolean with false default" file="tests/Unit/Support/FieldBuilderTest.php::it generates boolean with false default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.021961"/>
        <testcase name="it generates json array" file="tests/Unit/Support/FieldBuilderTest.php::it generates json array" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.017393"/>
        <testcase name="it generates decimal as string default" file="tests/Unit/Support/FieldBuilderTest.php::it generates decimal as string default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.017577"/>
        <testcase name="it generates nullable integer without default" file="tests/Unit/Support/FieldBuilderTest.php::it generates nullable integer without default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.017510"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\DtoHeaderGeneratorTest" file="tests/Unit/Header/DtoHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.046036">
        <testcase name="it falls back to DTO name if dto header is missing" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it falls back to DTO name if dto header is missing" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.027813"/>
        <testcase name="it generates class name from dto header" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it generates class name from dto header" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.018223"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
