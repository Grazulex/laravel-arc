<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="/home/jean-marc-strauven/Dev/laravel-arc/phpunit.xml" tests="32" assertions="70" errors="0" failures="0" skipped="0" time="0.746461">
    <testsuite name="Unit" tests="26" assertions="52" errors="0" failures="0" skipped="0" time="0.603797">
      <testsuite name="Tests\Unit\Header\ModelHeaderGeneratorTest" file="tests/Unit/Header/ModelHeaderGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.139882">
        <testcase name="it returns null if model header is not a string" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is not a string" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.093312"/>
        <testcase name="it generates use statement from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it generates use statement from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.015724"/>
        <testcase name="it trims backslashes from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it trims backslashes from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.015234"/>
        <testcase name="it returns null if model header is missing" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is missing" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.015611"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\TableHeaderGeneratorTest" file="tests/Unit/Header/TableHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.048049">
        <testcase name="it generates table annotation from table header" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it generates table annotation from table header" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.030374"/>
        <testcase name="it returns null if table header is missing" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it returns null if table header is missing" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.017675"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\StringFieldGeneratorTest" file="tests/Unit/Field/StringFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.025066">
        <testcase name="it generates string fields correctly" file="tests/Unit/Field/StringFieldGeneratorTest.php::it generates string fields correctly" class="Tests\Unit\Field\StringFieldGeneratorTest" classname="Tests.Unit.Field.StringFieldGeneratorTest" assertions="4" time="0.025066"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\BooleanFieldGeneratorTest" file="tests/Unit/Field/BooleanFieldGeneratorTest.php" tests="1" assertions="5" errors="0" failures="0" skipped="0" time="0.022632">
        <testcase name="it generates boolean fields correctly" file="tests/Unit/Field/BooleanFieldGeneratorTest.php::it generates boolean fields correctly" class="Tests\Unit\Field\BooleanFieldGeneratorTest" classname="Tests.Unit.Field.BooleanFieldGeneratorTest" assertions="5" time="0.022632"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\HeaderGeneratorRegistryTest" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.018692">
        <testcase name="it calls only supported generators for the headers" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php::it calls only supported generators for the headers" class="Tests\Unit\Header\HeaderGeneratorRegistryTest" classname="Tests.Unit.Header.HeaderGeneratorRegistryTest" assertions="6" time="0.018692"/>
      </testsuite>
      <testsuite name="Tests\Unit\Support\FieldBuilderTest" file="tests/Unit/Support/FieldBuilderTest.php" tests="5" assertions="5" errors="0" failures="0" skipped="0" time="0.093062">
        <testcase name="it generates json array" file="tests/Unit/Support/FieldBuilderTest.php::it generates json array" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.028400"/>
        <testcase name="it generates decimal as string default" file="tests/Unit/Support/FieldBuilderTest.php::it generates decimal as string default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016629"/>
        <testcase name="it generates boolean with false default" file="tests/Unit/Support/FieldBuilderTest.php::it generates boolean with false default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.015971"/>
        <testcase name="it generates string field with default" file="tests/Unit/Support/FieldBuilderTest.php::it generates string field with default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016033"/>
        <testcase name="it generates nullable integer without default" file="tests/Unit/Support/FieldBuilderTest.php::it generates nullable integer without default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016030"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FieldGeneratorRegistryTest" file="tests/Unit/Field/FieldGeneratorRegistryTest.php" tests="7" assertions="8" errors="0" failures="0" skipped="0" time="0.128135">
        <testcase name="it throws if no generator supports the field type" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it throws if no generator supports the field type" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="2" time="0.030392"/>
        <testcase name="it Calls the correct generator for a decimal field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a decimal field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016444"/>
        <testcase name="it calls the correct generator for a float field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a float field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016227"/>
        <testcase name="it calls the correct generator for a string field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a string field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.015997"/>
        <testcase name="it calls the correct generator for an integer field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for an integer field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016257"/>
        <testcase name="it Calls the correct generator for a boolean field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a boolean field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016120"/>
        <testcase name="it Calls the correct generator for a double field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a double field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016698"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\IntegerFieldGeneratorTest" file="tests/Unit/Field/IntegerFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.031952">
        <testcase name="it generates integer fields correctly" file="tests/Unit/Field/IntegerFieldGeneratorTest.php::it generates integer fields correctly" class="Tests\Unit\Field\IntegerFieldGeneratorTest" classname="Tests.Unit.Field.IntegerFieldGeneratorTest" assertions="6" time="0.031952"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\DtoHeaderGeneratorTest" file="tests/Unit/Header/DtoHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.047121">
        <testcase name="it falls back to DTO name if dto header is missing" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it falls back to DTO name if dto header is missing" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.025301"/>
        <testcase name="it generates class name from dto header" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it generates class name from dto header" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.021820"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FloatFieldGeneratorTest" file="tests/Unit/Field/FloatFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.025184">
        <testcase name="it generates float fields correctly" file="tests/Unit/Field/FloatFieldGeneratorTest.php::it generates float fields correctly" class="Tests\Unit\Field\FloatFieldGeneratorTest" classname="Tests.Unit.Field.FloatFieldGeneratorTest" assertions="6" time="0.025184"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DecimalFieldGeneratorTest" file="tests/Unit/Field/DecimalFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.024021">
        <testcase name="it generates decimal fields correctly" file="tests/Unit/Field/DecimalFieldGeneratorTest.php::it generates decimal fields correctly" class="Tests\Unit\Field\DecimalFieldGeneratorTest" classname="Tests.Unit.Field.DecimalFieldGeneratorTest" assertions="4" time="0.024021"/>
      </testsuite>
    </testsuite>
    <testsuite name="Feature" tests="6" assertions="18" errors="0" failures="0" skipped="0" time="0.142665">
      <testsuite name="Tests\Feature\DtoDefinitionCommandsTest" file="tests/Feature/DtoDefinitionCommandsTest.php" tests="2" assertions="11" errors="0" failures="0" skipped="0" time="0.065458">
        <testcase name="it lists the generated YAML file with dto:definition-list" file="tests/Feature/DtoDefinitionCommandsTest.php::it lists the generated YAML file with dto:definition-list" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="3" time="0.046027"/>
        <testcase name="it creates a YAML DTO definition file with dto:definition-init" file="tests/Feature/DtoDefinitionCommandsTest.php::it creates a YAML DTO definition file with dto:definition-init" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="8" time="0.019431"/>
      </testsuite>
      <testsuite name="Tests\Feature\ConfigTest" file="tests/Feature/ConfigTest.php" tests="4" assertions="7" errors="0" failures="0" skipped="0" time="0.077207">
        <testcase name="it allows manual override of namespace via config" file="tests/Feature/ConfigTest.php::it allows manual override of namespace via config" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.027593"/>
        <testcase name="it loads the dto configuration correctly" file="tests/Feature/ConfigTest.php::it loads the dto configuration correctly" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="3" time="0.016664"/>
        <testcase name="it can resolve paths via DtoPaths helper" file="tests/Feature/ConfigTest.php::it can resolve paths via DtoPaths helper" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="2" time="0.016744"/>
        <testcase name="it automatically infers namespace from output path" file="tests/Feature/ConfigTest.php::it automatically infers namespace from output path" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.016206"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
