<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="/home/jean-marc-strauven/Dev/laravel-arc/phpunit.xml" tests="22" assertions="53" errors="0" failures="0" skipped="0" time="0.584548">
    <testsuite name="Feature" tests="6" assertions="18" errors="0" failures="0" skipped="0" time="0.222489">
      <testsuite name="Tests\Feature\ConfigTest" file="tests/Feature/ConfigTest.php" tests="4" assertions="7" errors="0" failures="0" skipped="0" time="0.144331">
        <testcase name="it loads the dto configuration correctly" file="tests/Feature/ConfigTest.php::it loads the dto configuration correctly" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="3" time="0.095910"/>
        <testcase name="it allows manual override of namespace via config" file="tests/Feature/ConfigTest.php::it allows manual override of namespace via config" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.016404"/>
        <testcase name="it can resolve paths via DtoPaths helper" file="tests/Feature/ConfigTest.php::it can resolve paths via DtoPaths helper" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="2" time="0.015955"/>
        <testcase name="it automatically infers namespace from output path" file="tests/Feature/ConfigTest.php::it automatically infers namespace from output path" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.016062"/>
      </testsuite>
      <testsuite name="Tests\Feature\DtoDefinitionCommandsTest" file="tests/Feature/DtoDefinitionCommandsTest.php" tests="2" assertions="11" errors="0" failures="0" skipped="0" time="0.078158">
        <testcase name="it lists the generated YAML file with dto:definition-list" file="tests/Feature/DtoDefinitionCommandsTest.php::it lists the generated YAML file with dto:definition-list" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="3" time="0.057935"/>
        <testcase name="it creates a YAML DTO definition file with dto:definition-init" file="tests/Feature/DtoDefinitionCommandsTest.php::it creates a YAML DTO definition file with dto:definition-init" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="8" time="0.020224"/>
      </testsuite>
    </testsuite>
    <testsuite name="Unit" tests="16" assertions="35" errors="0" failures="0" skipped="0" time="0.362060">
      <testsuite name="Tests\Unit\Field\FloatFieldGeneratorTest" file="tests/Unit/Field/FloatFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.039078">
        <testcase name="it generates float fields correctly" file="tests/Unit/Field/FloatFieldGeneratorTest.php::it generates float fields correctly" class="Tests\Unit\Field\FloatFieldGeneratorTest" classname="Tests.Unit.Field.FloatFieldGeneratorTest" assertions="6" time="0.039078"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\TableHeaderGeneratorTest" file="tests/Unit/Header/TableHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.041450">
        <testcase name="it returns null if table header is missing" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it returns null if table header is missing" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.023019"/>
        <testcase name="it generates table annotation from table header" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it generates table annotation from table header" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.018431"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\HeaderGeneratorRegistryTest" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.025999">
        <testcase name="it calls only supported generators for the headers" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php::it calls only supported generators for the headers" class="Tests\Unit\Header\HeaderGeneratorRegistryTest" classname="Tests.Unit.Header.HeaderGeneratorRegistryTest" assertions="6" time="0.025999"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FieldGeneratorRegistryTest" file="tests/Unit/Field/FieldGeneratorRegistryTest.php" tests="4" assertions="5" errors="0" failures="0" skipped="0" time="0.083841">
        <testcase name="it calls the correct generator for a float field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a float field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.029016"/>
        <testcase name="it throws if no generator supports the field type" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it throws if no generator supports the field type" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="2" time="0.017147"/>
        <testcase name="it calls the correct generator for a string field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a string field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.018953"/>
        <testcase name="it calls the correct generator for an integer field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for an integer field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.018725"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\DtoHeaderGeneratorTest" file="tests/Unit/Header/DtoHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.045488">
        <testcase name="it falls back to DTO name if dto header is missing" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it falls back to DTO name if dto header is missing" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.029193"/>
        <testcase name="it generates class name from dto header" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it generates class name from dto header" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.016295"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\ModelHeaderGeneratorTest" file="tests/Unit/Header/ModelHeaderGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.076498">
        <testcase name="it trims backslashes from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it trims backslashes from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.025721"/>
        <testcase name="it returns null if model header is missing" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is missing" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016823"/>
        <testcase name="it returns null if model header is not a string" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is not a string" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016579"/>
        <testcase name="it generates use statement from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it generates use statement from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.017375"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\IntegerFieldGeneratorTest" file="tests/Unit/Field/IntegerFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.028330">
        <testcase name="it generates integer fields correctly" file="tests/Unit/Field/IntegerFieldGeneratorTest.php::it generates integer fields correctly" class="Tests\Unit\Field\IntegerFieldGeneratorTest" classname="Tests.Unit.Field.IntegerFieldGeneratorTest" assertions="6" time="0.028330"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\StringFieldGeneratorTest" file="tests/Unit/Field/StringFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.021376">
        <testcase name="it generates string fields correctly" file="tests/Unit/Field/StringFieldGeneratorTest.php::it generates string fields correctly" class="Tests\Unit\Field\StringFieldGeneratorTest" classname="Tests.Unit.Field.StringFieldGeneratorTest" assertions="4" time="0.021376"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
