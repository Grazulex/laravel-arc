<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="/home/jean-marc-strauven/Dev/laravel-arc/phpunit.xml" tests="55" assertions="99" errors="0" failures="0" skipped="0" time="1.265407">
    <testsuite name="Unit" tests="49" assertions="81" errors="0" failures="0" skipped="0" time="1.118929">
      <testsuite name="Tests\Unit\Field\TextFieldGeneratorTest" file="tests/Unit/Field/TextFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.117733">
        <testcase name="it generates nullable text field with null default" file="tests/Unit/Field/TextFieldGeneratorTest.php::it generates nullable text field with null default" class="Tests\Unit\Field\TextFieldGeneratorTest" classname="Tests.Unit.Field.TextFieldGeneratorTest" assertions="1" time="0.100431"/>
        <testcase name="it generates text field with default value" file="tests/Unit/Field/TextFieldGeneratorTest.php::it generates text field with default value" class="Tests\Unit\Field\TextFieldGeneratorTest" classname="Tests.Unit.Field.TextFieldGeneratorTest" assertions="2" time="0.017302"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DecimalFieldGeneratorTest" file="tests/Unit/Field/DecimalFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.030484">
        <testcase name="it generates decimal fields correctly" file="tests/Unit/Field/DecimalFieldGeneratorTest.php::it generates decimal fields correctly" class="Tests\Unit\Field\DecimalFieldGeneratorTest" classname="Tests.Unit.Field.DecimalFieldGeneratorTest" assertions="4" time="0.030484"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\JsonFieldGeneratorTest" file="tests/Unit/Field/JsonFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.055866">
        <testcase name="it generates nullable json field with null default" file="tests/Unit/Field/JsonFieldGeneratorTest.php::it generates nullable json field with null default" class="Tests\Unit\Field\JsonFieldGeneratorTest" classname="Tests.Unit.Field.JsonFieldGeneratorTest" assertions="1" time="0.031522"/>
        <testcase name="it generates json field with default value" file="tests/Unit/Field/JsonFieldGeneratorTest.php::it generates json field with default value" class="Tests\Unit\Field\JsonFieldGeneratorTest" classname="Tests.Unit.Field.JsonFieldGeneratorTest" assertions="2" time="0.024344"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DateFieldGeneratorTest" file="tests/Unit/Field/DateFieldGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.077343">
        <testcase name="it ignores string default value for date" file="tests/Unit/Field/DateFieldGeneratorTest.php::it ignores string default value for date" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.024983"/>
        <testcase name="it generates non-nullable date field without default" file="tests/Unit/Field/DateFieldGeneratorTest.php::it generates non-nullable date field without default" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.017753"/>
        <testcase name="it handles explicit null default for date" file="tests/Unit/Field/DateFieldGeneratorTest.php::it handles explicit null default for date" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.016957"/>
        <testcase name="it generates nullable date field with null default" file="tests/Unit/Field/DateFieldGeneratorTest.php::it generates nullable date field with null default" class="Tests\Unit\Field\DateFieldGeneratorTest" classname="Tests.Unit.Field.DateFieldGeneratorTest" assertions="1" time="0.017650"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\ArrayFieldGeneratorTest" file="tests/Unit/Field/ArrayFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.043931">
        <testcase name="it generates nullable array field with null default" file="tests/Unit/Field/ArrayFieldGeneratorTest.php::it generates nullable array field with null default" class="Tests\Unit\Field\ArrayFieldGeneratorTest" classname="Tests.Unit.Field.ArrayFieldGeneratorTest" assertions="1" time="0.027667"/>
        <testcase name="it generates array field with default value" file="tests/Unit/Field/ArrayFieldGeneratorTest.php::it generates array field with default value" class="Tests\Unit\Field\ArrayFieldGeneratorTest" classname="Tests.Unit.Field.ArrayFieldGeneratorTest" assertions="2" time="0.016264"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\TableHeaderGeneratorTest" file="tests/Unit/Header/TableHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.042907">
        <testcase name="it returns null if table header is missing" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it returns null if table header is missing" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.026524"/>
        <testcase name="it generates table annotation from table header" file="tests/Unit/Header/TableHeaderGeneratorTest.php::it generates table annotation from table header" class="Tests\Unit\Header\TableHeaderGeneratorTest" classname="Tests.Unit.Header.TableHeaderGeneratorTest" assertions="1" time="0.016382"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\HeaderGeneratorRegistryTest" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.026383">
        <testcase name="it calls only supported generators for the headers" file="tests/Unit/Header/HeaderGeneratorRegistryTest.php::it calls only supported generators for the headers" class="Tests\Unit\Header\HeaderGeneratorRegistryTest" classname="Tests.Unit.Header.HeaderGeneratorRegistryTest" assertions="6" time="0.026383"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\TimeFieldGeneratorTest" file="tests/Unit/Field/TimeFieldGeneratorTest.php" tests="1" assertions="1" errors="0" failures="0" skipped="0" time="0.019294">
        <testcase name="it generates nullable time field with null default" file="tests/Unit/Field/TimeFieldGeneratorTest.php::it generates nullable time field with null default" class="Tests\Unit\Field\TimeFieldGeneratorTest" classname="Tests.Unit.Field.TimeFieldGeneratorTest" assertions="1" time="0.019294"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\StringFieldGeneratorTest" file="tests/Unit/Field/StringFieldGeneratorTest.php" tests="1" assertions="4" errors="0" failures="0" skipped="0" time="0.020291">
        <testcase name="it generates string fields correctly" file="tests/Unit/Field/StringFieldGeneratorTest.php::it generates string fields correctly" class="Tests\Unit\Field\StringFieldGeneratorTest" classname="Tests.Unit.Field.StringFieldGeneratorTest" assertions="4" time="0.020291"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\BooleanFieldGeneratorTest" file="tests/Unit/Field/BooleanFieldGeneratorTest.php" tests="1" assertions="5" errors="0" failures="0" skipped="0" time="0.020506">
        <testcase name="it generates boolean fields correctly" file="tests/Unit/Field/BooleanFieldGeneratorTest.php::it generates boolean fields correctly" class="Tests\Unit\Field\BooleanFieldGeneratorTest" classname="Tests.Unit.Field.BooleanFieldGeneratorTest" assertions="5" time="0.020506"/>
      </testsuite>
      <testsuite name="Tests\Unit\Validator\EnumValidatorGeneratorTest" file="tests/Unit/Validator/EnumValidatorGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.054648">
        <testcase name="it generates a rule for enum values" file="tests/Unit/Validator/EnumValidatorGeneratorTest.php::it generates a rule for enum values" class="Tests\Unit\Validator\EnumValidatorGeneratorTest" classname="Tests.Unit.Validator.EnumValidatorGeneratorTest" assertions="1" time="0.038129"/>
        <testcase name="it generates a rule for PHP enum class" file="tests/Unit/Validator/EnumValidatorGeneratorTest.php::it generates a rule for PHP enum class" class="Tests\Unit\Validator\EnumValidatorGeneratorTest" classname="Tests.Unit.Validator.EnumValidatorGeneratorTest" assertions="1" time="0.016519"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\IntegerFieldGeneratorTest" file="tests/Unit/Field/IntegerFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.025039">
        <testcase name="it generates integer fields correctly" file="tests/Unit/Field/IntegerFieldGeneratorTest.php::it generates integer fields correctly" class="Tests\Unit\Field\IntegerFieldGeneratorTest" classname="Tests.Unit.Field.IntegerFieldGeneratorTest" assertions="6" time="0.025039"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\DtoHeaderGeneratorTest" file="tests/Unit/Header/DtoHeaderGeneratorTest.php" tests="2" assertions="2" errors="0" failures="0" skipped="0" time="0.039265">
        <testcase name="it falls back to DTO name if dto header is missing" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it falls back to DTO name if dto header is missing" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.020162"/>
        <testcase name="it generates class name from dto header" file="tests/Unit/Header/DtoHeaderGeneratorTest.php::it generates class name from dto header" class="Tests\Unit\Header\DtoHeaderGeneratorTest" classname="Tests.Unit.Header.DtoHeaderGeneratorTest" assertions="1" time="0.019103"/>
      </testsuite>
      <testsuite name="Tests\Unit\Support\FieldBuilderTest" file="tests/Unit/Support/FieldBuilderTest.php" tests="5" assertions="5" errors="0" failures="0" skipped="0" time="0.092801">
        <testcase name="it generates nullable integer without default" file="tests/Unit/Support/FieldBuilderTest.php::it generates nullable integer without default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.025193"/>
        <testcase name="it generates json array" file="tests/Unit/Support/FieldBuilderTest.php::it generates json array" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016558"/>
        <testcase name="it generates decimal as string default" file="tests/Unit/Support/FieldBuilderTest.php::it generates decimal as string default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016531"/>
        <testcase name="it generates boolean with false default" file="tests/Unit/Support/FieldBuilderTest.php::it generates boolean with false default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.016772"/>
        <testcase name="it generates string field with default" file="tests/Unit/Support/FieldBuilderTest.php::it generates string field with default" class="Tests\Unit\Support\FieldBuilderTest" classname="Tests.Unit.Support.FieldBuilderTest" assertions="1" time="0.017746"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\EnumFieldGeneratorTest" file="tests/Unit/Field/EnumFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.045807">
        <testcase name="it generates nullable enum field with null default" file="tests/Unit/Field/EnumFieldGeneratorTest.php::it generates nullable enum field with null default" class="Tests\Unit\Field\EnumFieldGeneratorTest" classname="Tests.Unit.Field.EnumFieldGeneratorTest" assertions="1" time="0.029840"/>
        <testcase name="it generates enum field with default value" file="tests/Unit/Field/EnumFieldGeneratorTest.php::it generates enum field with default value" class="Tests\Unit\Field\EnumFieldGeneratorTest" classname="Tests.Unit.Field.EnumFieldGeneratorTest" assertions="2" time="0.015967"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FieldGeneratorRegistryTest" file="tests/Unit/Field/FieldGeneratorRegistryTest.php" tests="7" assertions="8" errors="0" failures="0" skipped="0" time="0.128247">
        <testcase name="it Calls the correct generator for a decimal field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a decimal field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.019223"/>
        <testcase name="it calls the correct generator for a float field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a float field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.025254"/>
        <testcase name="it Calls the correct generator for a double field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a double field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016704"/>
        <testcase name="it Calls the correct generator for a boolean field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it Calls the correct generator for a boolean field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.017016"/>
        <testcase name="it calls the correct generator for an integer field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for an integer field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016420"/>
        <testcase name="it throws if no generator supports the field type" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it throws if no generator supports the field type" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="2" time="0.016990"/>
        <testcase name="it calls the correct generator for a string field" file="tests/Unit/Field/FieldGeneratorRegistryTest.php::it calls the correct generator for a string field" class="Tests\Unit\Field\FieldGeneratorRegistryTest" classname="Tests.Unit.Field.FieldGeneratorRegistryTest" assertions="1" time="0.016640"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\DateTimeFieldGeneratorTest" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.088586">
        <testcase name="it generates nullable datetime field with null default" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it generates nullable datetime field with null default" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.031809"/>
        <testcase name="it ignores string default value for datetime" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it ignores string default value for datetime" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.023911"/>
        <testcase name="it handles explicit null default for datetime" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it handles explicit null default for datetime" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.016347"/>
        <testcase name="it generates non-nullable datetime field without default" file="tests/Unit/Field/DateTimeFieldGeneratorTest.php::it generates non-nullable datetime field without default" class="Tests\Unit\Field\DateTimeFieldGeneratorTest" classname="Tests.Unit.Field.DateTimeFieldGeneratorTest" assertions="1" time="0.016518"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\FloatFieldGeneratorTest" file="tests/Unit/Field/FloatFieldGeneratorTest.php" tests="1" assertions="6" errors="0" failures="0" skipped="0" time="0.029307">
        <testcase name="it generates float fields correctly" file="tests/Unit/Field/FloatFieldGeneratorTest.php::it generates float fields correctly" class="Tests\Unit\Field\FloatFieldGeneratorTest" classname="Tests.Unit.Field.FloatFieldGeneratorTest" assertions="6" time="0.029307"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\UuidFieldGeneratorTest" file="tests/Unit/Field/UuidFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.041666">
        <testcase name="it generates nullable uuid field with null default" file="tests/Unit/Field/UuidFieldGeneratorTest.php::it generates nullable uuid field with null default" class="Tests\Unit\Field\UuidFieldGeneratorTest" classname="Tests.Unit.Field.UuidFieldGeneratorTest" assertions="1" time="0.023754"/>
        <testcase name="it generates uuid field with default value" file="tests/Unit/Field/UuidFieldGeneratorTest.php::it generates uuid field with default value" class="Tests\Unit\Field\UuidFieldGeneratorTest" classname="Tests.Unit.Field.UuidFieldGeneratorTest" assertions="2" time="0.017912"/>
      </testsuite>
      <testsuite name="Tests\Unit\Header\ModelHeaderGeneratorTest" file="tests/Unit/Header/ModelHeaderGeneratorTest.php" tests="4" assertions="4" errors="0" failures="0" skipped="0" time="0.074461">
        <testcase name="it trims backslashes from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it trims backslashes from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.025334"/>
        <testcase name="it generates use statement from model header" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it generates use statement from model header" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016543"/>
        <testcase name="it returns null if model header is not a string" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is not a string" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016377"/>
        <testcase name="it returns null if model header is missing" file="tests/Unit/Header/ModelHeaderGeneratorTest.php::it returns null if model header is missing" class="Tests\Unit\Header\ModelHeaderGeneratorTest" classname="Tests.Unit.Header.ModelHeaderGeneratorTest" assertions="1" time="0.016208"/>
      </testsuite>
      <testsuite name="Tests\Unit\Field\IdFieldGeneratorTest" file="tests/Unit/Field/IdFieldGeneratorTest.php" tests="2" assertions="3" errors="0" failures="0" skipped="0" time="0.044366">
        <testcase name="it generates id field with default value" file="tests/Unit/Field/IdFieldGeneratorTest.php::it generates id field with default value" class="Tests\Unit\Field\IdFieldGeneratorTest" classname="Tests.Unit.Field.IdFieldGeneratorTest" assertions="2" time="0.028189"/>
        <testcase name="it generates nullable id field with null default" file="tests/Unit/Field/IdFieldGeneratorTest.php::it generates nullable id field with null default" class="Tests\Unit\Field\IdFieldGeneratorTest" classname="Tests.Unit.Field.IdFieldGeneratorTest" assertions="1" time="0.016177"/>
      </testsuite>
    </testsuite>
    <testsuite name="Feature" tests="6" assertions="18" errors="0" failures="0" skipped="0" time="0.146478">
      <testsuite name="Tests\Feature\ConfigTest" file="tests/Feature/ConfigTest.php" tests="4" assertions="7" errors="0" failures="0" skipped="0" time="0.075517">
        <testcase name="it allows manual override of namespace via config" file="tests/Feature/ConfigTest.php::it allows manual override of namespace via config" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.024923"/>
        <testcase name="it automatically infers namespace from output path" file="tests/Feature/ConfigTest.php::it automatically infers namespace from output path" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="1" time="0.017300"/>
        <testcase name="it loads the dto configuration correctly" file="tests/Feature/ConfigTest.php::it loads the dto configuration correctly" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="3" time="0.016849"/>
        <testcase name="it can resolve paths via DtoPaths helper" file="tests/Feature/ConfigTest.php::it can resolve paths via DtoPaths helper" class="Tests\Feature\ConfigTest" classname="Tests.Feature.ConfigTest" assertions="2" time="0.016445"/>
      </testsuite>
      <testsuite name="Tests\Feature\DtoDefinitionCommandsTest" file="tests/Feature/DtoDefinitionCommandsTest.php" tests="2" assertions="11" errors="0" failures="0" skipped="0" time="0.070961">
        <testcase name="it creates a YAML DTO definition file with dto:definition-init" file="tests/Feature/DtoDefinitionCommandsTest.php::it creates a YAML DTO definition file with dto:definition-init" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="8" time="0.050105"/>
        <testcase name="it lists the generated YAML file with dto:definition-list" file="tests/Feature/DtoDefinitionCommandsTest.php::it lists the generated YAML file with dto:definition-list" class="Tests\Feature\DtoDefinitionCommandsTest" classname="Tests.Feature.DtoDefinitionCommandsTest" assertions="3" time="0.020856"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testsuites>
